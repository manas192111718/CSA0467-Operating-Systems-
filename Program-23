#include <stdio.h>
#include <stdlib.h>

void scanDisk(int request[], int n, int head, int direction) {
    int seekCount = 0;
    int currentPosition = head;
    int end = 199; 

   
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (request[j] > request[j+1]) {
              
                int temp = request[j];
                request[j] = request[j+1];
                request[j+1] = temp;
            }
        }
    }

   
    int currentIndex = 0;
    while (currentIndex < n && request[currentIndex] < currentPosition) {
        currentIndex++;
    }

    
    for (int i = currentIndex; i < n && i >= 0; i += direction) {
        printf("%d ", currentPosition);
        seekCount += abs(currentPosition - request[i]);
        currentPosition = request[i];
    }

   
    if (direction == 1) {
        printf("%d ", currentPosition);
        seekCount += abs(currentPosition - end);
        currentPosition = end;

        for (int i = n - 1; i >= currentIndex; i--) {
            printf("%d ", currentPosition);
            seekCount += abs(currentPosition - request[i]);
            currentPosition = request[i];
        }
    }

    printf("\nTotal Seek Count: %d\n", seekCount);
}

int main() {
    int n, head, direction;

    
    printf("Enter the number of requests: ");
    scanf("%d", &n);

    int request[n];

    printf("Enter the request queue:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &request[i]);
    }

    printf("Enter the initial position of the head: ");
    scanf("%d", &head);

    printf("Enter the direction (1 for towards higher tracks, -1 for towards lower tracks): ");
    scanf("%d", &direction);

    
    scanDisk(request, n, head, direction);

    return 0;
}
